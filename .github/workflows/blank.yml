name: Push File(or Dir) to another repository

on: push


jobs:
  copy-file:
    strategy:
      matrix:
        repos: 
          - "mytutor1"
          - "service-account-terraform"

    runs-on: ubuntu-20.04
    steps:
      - name: Clone Main Repo
        uses: actions/checkout@v2

      - name: Clone Repo to update
        uses: actions/checkout@v2
        with:
          repository: "DwijeshMishra/${{ matrix.repos }}"
          path: "${{ matrix.repos }}"
          token: "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"
      
      - name: test2
        run: |
          cp -r $GITHUB_WORKSPACE/project-specific.yaml $GITHUB_WORKSPACE//${{ matrix.repos }}/
          cd $GITHUB_WORKSPACE//${{ matrix.repos }}/
          git remote -v

      - name: Create commits
        run: |
          cd $GITHUB_WORKSPACE/${{ matrix.repos }}/
          git config user.name 'Github Bot'
          git config user.email "ryo.osive@gmail.com"
          git add .
          git commit -m "Add untracked file during workflow"
          
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: "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"
          path: "${{ github.workspace }}/${{ matrix.repos }}"
          branch: "patch/update-workflow"
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
          
          
          
          
          
          
          
  GenToken: 
    runs-on: [self-hosted]
    outputs:
      token: ${{ steps.genVaultToken.outputs.temp_token }}
    steps:
      - name: Generate token
        id: genVaultToken
        # uses: hashicorp/vault-action@v2.3.1
        # with:
        #   url: ${{ secrets.VAULT_ADDRESS }}
        #   method: approle
        #   roleId: ${{ secrets.roleId }}
        #   secretId: ${{ secrets.secretId }}
        run: |
          TEMP_TOKEN=$(curl --request POST --data '{"role_id": ${{ secrets.ROLEID }},"secret_id": ${{ secrets.SECRETID }}}' ${{ secrets.VAULT_ADDRESS }}/v1/${{ secrets.VAULTNAMESPACE }}/auth/approle/login | jq .auth.client_token)
          
          echo "::set-output name=temp_token::$TEMP_TOKEN"

        shell: bash

  print_token:
    runs-on: [self-hosted]
    needs: [GenToken]
    steps:
      - name: Use Token 
        id: useToken
        run: | 
          echo ${{ needs.GenToken.outputs.token }}
        shell: bash
